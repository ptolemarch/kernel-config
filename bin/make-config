#! /bin/bash
# vim: ts=2 sw=2 et ai si

# configure using config.options and keep both in version control

# eventually, I'd like to augment this script with my own _warn(), etc.
                # stop the script immediately if
set -o errexit  #   any command returns an error
set -o pipefail #   ... even if that command isn't at the end of its pipeline
set -o nounset  #   unset variables are expanded

#set -o verbose  # as I'm debugging this script, anyway

hsk="${SUROS_KERNEL_DIR:-$HOME/kernel}" ; hsk=${hsk%/}

cd "$hsk"

# KBUILD_OUTPUT will be used for saving the .config, etc
if [[ -n $KBUILD_OUTPUT ]] ; then :; else
  cat >&2 <<ERRMSG
I was expecting the environment variable
  \$KBUILD_OUTPUT
to be set, probably as
  KBUILD_OUTPUT="$hsk/tmp"
But it was not. Unable to continue without that set.
ERRMSG
  exit 1
fi

# make sure that ${hsk}/tmp is mounted tmpfs
# but, first, it would be weird if the parent were a tmpfs
hsk_fs="$(df -T "$hsk" | tail -n 1 | awk '{print $2}')"
if [[ $hsk_fs == "tmpfs" && -z $WHOLE_KERNEL_IS_TMPFS ]] ; then
  cat >&2 <<ERRMSG
directory ${hsk} is a tmpfs. This is weird.

If this is what you expected, set WHOLE_KERNEL_IS_TMPFS and try again.
ERRMSG
  exit 1
fi
hskt_fs="$(df -T "$hsk/tmp" | tail -n 1 | awk '{print $2}')"
if [[ $hskt_fs == "tmpfs" ]]; then :; else
  fs_file="${hsk}/tmp"
  fs_spec=${fs_file#/} ; fs_spec=${fs_spec//\//_} fs_spec="/tmpfs/$fs_spec"
  uid=$(id -u)
  gid=$(id -g)
  cat >&2 <<ERRMSG
directory ${fs_file} isn't a tmpfs

You might want to fix this using something like:
  mount \\
    -t tmpfs \\
    -o rw,noatime,nodiratime,nodev,uid=$uid,gid=$gid,mode=755 \\
    $fs_spec \\
    $fs_file
ERRMSG
  exit 1
fi


# empty tmp/
find "$hsk/tmp" -depth -mindepth 1 -delete

# make sure config is already checked in
cd config
if git diff-index HEAD -- | grep "[[:space:]]config$" > /dev/null ; then
  # this one is wrong if it's TRUE, not false
  cat >&2 <<ERRMSG
config file ${hsk}/config/config has uncommitted changes
ERRMSG
  exit 1
fi
cd ..

# reset .config to defconfig
cd linux
make defconfig
cd ..

# apply config.options
cd config
bin/config-options config.options
cd ..

# fill out .config
cd linux
make olddefconfig
cd ..

# commit change
cd config
diffconfig config config-tmp | sed -e 's/^/  /' > .diffconfig
cp config-tmp config
git add config config.options
git commit 

# NOTE: code to prepend kernel version to commit message is in git hook:
#  ~/kernel/config/bin/git-hooks/prepare-commit-msg
