#! /bin/bash
# vim: ts=2 sw=2 et ai

# `make install && make install_modules` with checks

# eventually, I'd like to augment this script with my own _warn(), etc.
                # stop the script immediately if
set -o errexit  #   any command returns an error
set -o pipefail #   ... even if that command isn't at the end of its pipeline
set -o nounset  #   unset variables are expanded

#set -o verbose  # as I'm debugging this script, anyway

hsk="${SUROS_KERNEL_DIR:-$HOME/kernel}" ; hsk=${hsk%/}

cd "$hsk"

# KBUILD_OUTPUT contains built kernel and modules
if [[ -n $KBUILD_OUTPUT ]] ; then :; else
  cat >&2 <<ERRMSG
I was expecting the environment variable
  \$KBUILD_OUTPUT
to be set, probably as
  KBUILD_OUTPUT="$hsk/tmp"
But it was not. Unable to continue without that set.
ERRMSG
  exit 1
fi

# just verify that $hsk/build and $hsk/tmp are the same,
#  as they should be after bin/make-kernel
if diff -r "$hsk/build" "$hsk/tmp" > /dev/null ; then :; else
  cat >&2 <<ERRMSG
The two directories,
  $hsk/tmp
and
  $hsk/build
should be identical at this point. They are not. Something's probably weird.
ERRMSG
  exit 1
fi

# verify that /boot is mounted
if mount | grep " on /boot " > /dev/null ; then :; else
  cat >&2 <<ERRMSG
Nothing mounted on mountpoint /boot. That's where I was going to install.
ERRMSG
  exit 1
fi

# verify that /boot is mounted
if mount | grep " on /boot " > /dev/null ; then :; else
  cat >&2 <<ERRMSG
Nothing mounted on mountpoint /boot. That's where I was going to install.
ERRMSG
  exit 1
fi

# install
cd linux
make install
make modules_install
cd ..

# warn if this kernel is not mentioned anywhere in grub.cfg
# there really shouldn't be spaces, but let's at least not be lax in verification...
this_kernel="$(basename $(ls -tr /boot/vmlinuz* | tail -n 1))"
if grep -F -e "$this_kernel" /boot/grub/grub.cfg > /dev/null ; then :; else
  cat >&2 <<ERRMSG
This new kernel isn't mentioned anywhere in grub.cfg. Before you can boot it,
root must run:
  grub-mkconfig -o /boot/grub/grub.cfg
ERRMSG
fi
